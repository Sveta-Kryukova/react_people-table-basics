{"version":3,"sources":["components/HomePage/HomePage.tsx","components/PeoplePage/PeoplePage.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/Loader/Loader.tsx","components/PeopleTable/PeopleTable.tsx","components/NotFoundPage/NotFoundPage.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PeoplePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","to","slug","classNames","sex","name","Loader","headers","id","title","PeopleTable","useState","people","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","useParams","useEffect","catch","finally","preparedPeople","useMemo","map","human","mother","find","m","motherName","father","f","fatherName","length","header","born","died","NotFoundPage","Navigation","role","isActive","App","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.fc386338.chunk.js","sourcesContent":["export const HomePage:React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const PeoplePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">People Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useState, useEffect, useMemo } from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { Loader } from '../Loader';\n\nconst headers = [\n  { id: 1, title: 'Name' },\n  { id: 2, title: 'Sex' },\n  { id: 3, title: 'Born' },\n  { id: 4, title: 'Died' },\n  { id: 5, title: 'Mother' },\n  { id: 6, title: 'Father' },\n];\n\nexport const PeopleTable: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const { slug } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(setPeople)\n      .catch(() => setErrorMessage('Something went wrong'))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const preparedPeople = useMemo(() => (\n    people.map(human => {\n      const mother = people.find(m => (m.name === human.motherName));\n      const father = people.find(f => (f.name === human.fatherName));\n\n      return {\n        ...human,\n        mother,\n        father,\n      };\n    })), [people]);\n\n  return (\n    <div className=\"box table-container\">\n      {isLoading && <Loader />}\n\n      {!people.length && !isLoading && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n\n      {errorMessage && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n\n        {!isLoading && (\n          <>\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            />\n            <thead>\n              <tr>\n                {headers.map(header => <th key={header.id}>{header.title}</th>)}\n              </tr>\n            </thead>\n\n            <tbody>\n              {preparedPeople.map(person => (\n                <tr\n                  data-cy=\"person\"\n                  key={person.slug}\n                  className={classNames(\n                    { 'has-background-warning': person.slug === slug },\n                  )}\n                >\n                  <td>\n                    <PersonLink person={person} />\n                  </td>\n\n                  <td>{person.sex}</td>\n                  <td>{person.born}</td>\n                  <td>{person.died}</td>\n                  <td>\n                    {person.mother\n                      ? <PersonLink person={person.mother} />\n                      : person.motherName || '-'}\n                  </td>\n\n                  <td>\n                    {person.father\n                      ? <PersonLink person={person.father} />\n                      : person.fatherName || '-'}\n                  </td>\n\n                </tr>\n              ))}\n            </tbody>\n          </>\n        )}\n      </table>\n    </div>\n  );\n};\n","export const NotFoundPage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Navigation: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Navigation } from './components/NavBar/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n\n        <div className=\"block\" />\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter, Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { PeopleTable } from './components/PeopleTable/PeopleTable';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route\n              index\n              element={(\n                <>\n                  <PeoplePage />\n                  <PeopleTable />\n                </>\n              )}\n            />\n            <Route\n              path=\":slug\"\n              element={(\n                <>\n                  <PeoplePage />\n                  <PeopleTable />\n                </>\n              )}\n            />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={<NotFoundPage />}\n          />\n        </Route>\n      </Routes>\n    </HashRouter>,\n  );\n"],"sourceRoot":""}